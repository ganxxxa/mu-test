import type { NextPage, GetStaticProps, InferGetStaticPropsType } from "next";
import { Container, Grid } from "@mui/material";
import theme from "../styles/theme/theme";
import ProductCard from "../components/Product/productCard";
import { ProductType } from "../components/Product/product-context";
import { styled } from "@mui/material/styles";
import Paper from "@mui/material/Paper";
import { ThemeProvider } from "@mui/material/styles";
import SearchBar from "../components/searchbar";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { Box } from "@mui/system";

const UseItem = styled(Paper)(({ theme }) => ({
  backgroundColor: theme.palette.mode === "dark" ? "#1A2027" : "#fff",
  ...theme.typography.body2,
  padding: theme.spacing(1),
  textAlign: "center",
  color: theme.palette.text.secondary,
  width: "100%",
}));

interface HomeProps {
  item: ProductType[];
}
const Home: NextPage<HomeProps> = ({
  data,
}: InferGetStaticPropsType<typeof getStaticProps>) => {
  return (
    <ThemeProvider theme={theme}>
      <Box className={styles.container}>
        <Head>
          <title>M U T </title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <SearchBar />
        <Container maxWidth="md"></Container>
      </Box>

      <Grid container spacing={12} justifyContent="center">
        {data.map((data: ProductType) => (
          <Grid key={data.id} item xs={5}>
            <UseItem
              sx={{ my: 2 }}
              style={{
                background: "transparent",
                boxShadow: "none",
              }}
            >
              <ProductCard item={data} />
            </UseItem>
          </Grid>
        ))}
      </Grid>
    </ThemeProvider>
  );
};
export default Home;

export const getStaticProps: GetStaticProps = async () => {
  const res = await fetch("https://fakestoreapi.com/products");
  const data = await res.json();
  return {
    props: { data },
  };
};

// export const getStaticProps: GetStaticProps = async () => {
//   const data = await axios.get<ProductType[]>(
//     "https://fakestoreapi.com/products"
//   );
//   return {
//     props: {
//       data: data.data,
//     },
//   };
// };
